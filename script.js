

const iconRoom = `<img src="hotel.png" class="icon" alt="Room">`;
const iconNextClean = `<img src="calendar.png" class="icon" alt="Next Clean">`;
const iconSoap = `<img src="air-conditioning.png" class="icon" alt="Soap">`;
const iconAir = `<img src="air-conditioner.png" class="icon" alt="Air Filter">`;

// ‚úÖ flag ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î OK ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß
let userConfirmedOnce = false;
let isSearching = false;
let isSpecialRoom = false;  

document.addEventListener("DOMContentLoaded", () => {
    const modalOkBtn = document.getElementById("modalOkBtn");
    const container = document.querySelector(".container");
    const modal = document.getElementById("myModal");
    const roomInput = document.getElementById("roomNumber");

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° OK
    modalOkBtn.addEventListener("click", () => {
        closeModal();
        userConfirmedOnce = true;

        container.classList.remove("shrink", "expand");
        void container.offsetWidth;

        container.classList.add("shrink");
        setTimeout(() => {
            container.classList.remove("shrink");
            void container.offsetWidth;
            container.classList.add("expand");
        }, 300);
    });

    // ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
    document.addEventListener("click", (event) => {
        if (modal.classList.contains("show") && event.target === modal) {
            closeModal();
        }
    });

    document.addEventListener("keydown", (event) => {
        // ‡∏õ‡∏¥‡∏î modal ‡∏î‡πâ‡∏ß‡∏¢ ESC
        if (event.key === "Escape" && modal.classList.contains("show")) {
            closeModal();
            return;
        }

        // ‡∏õ‡∏¥‡∏î modal ‡∏î‡πâ‡∏ß‡∏¢ Enter
        if (event.key === "Enter" && modal.classList.contains("show")) {
            closeModal();
            return;
        }

        // Submit ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Enter ‡πÅ‡∏•‡∏∞ modal ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î
        if (event.key === "Enter" && document.activeElement === roomInput && !modal.classList.contains("show")) {
            submitRoom();
            return;
        }
    });

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
    container.classList.add('animate-on-load');
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤
function convertToBangkokTime(dateString) {
    if (!dateString || dateString === "No schedule available") {
        return "N/A";
    }
    return dateString.replace(/(\d{2})(\d{2})(\d{2})/, "$1/$2/20$3");
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á modal
function showModal(message) {
    document.getElementById("modalMessage").innerHTML = message;
    let modal = document.getElementById("myModal");
    modal.style.display = "flex";
    setTimeout(() => {
        modal.classList.add("show");
    }, 10);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î modal
function closeModal() {
    let modal = document.getElementById("myModal");
    modal.classList.remove("show");
    setTimeout(() => {
        modal.style.display = "none";
        document.getElementById("roomNumber").focus(); // üëà focus ‡∏Ñ‡∏∑‡∏ô
    }, 300);
}

document.querySelector("form")?.addEventListener("submit", e => e.preventDefault());
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å Special Rooms


function selectSpecialRoom(room) {
    // ‡∏õ‡∏¥‡∏î modal
    closeModal();

    // ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô input
    document.getElementById('roomNumber').value = room;

    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ flag ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å Special Rooms
    isSpecialRoom = true;

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô submitRoom ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡πâ‡∏≠‡∏á
    submitRoom();
}

function showSpecialRoomOptions() {
     const specialRooms = [
    "Co Working",
    "People Caf√©",
    "Restaurant",
    "Main kitchen",
    "Game Room",
    "Fitness",
    "Canteen",
    "Kid's Club",
    "HK Office",
    "Eng Office",
    "Receiving Office",
    "Exe. Office",
    "Front Office",
    "HR Office",
    "Garbage Room",
    "LP Office",
    "FB Office",
    "Wine Room",
    "vegetable Room"
];

    let optionsHtml = `
        <h3 style="margin-bottom: 15px; padding-bottom: 8px; border-bottom: 1px solid #ddd;">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:</h3>
        <div style="max-height: 400px; overflow-y: auto; padding-right: 10px; margin-bottom: 15px;">
            <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 10px; padding: 5px;">`;

    specialRooms.forEach(room => {
        optionsHtml += `
            <div style="padding: 5px;">
                <button style="width: 100%; padding: 10px; cursor: pointer; border-radius: 8px; 
                background-color: #f5f5f5; border: 1px solid #ddd; transition: all 0.3s ease;
                font-size: 14px; text-align: left; overflow: hidden; text-overflow: ellipsis;"
                onmouseover="this.style.backgroundColor='#e0e0e0'"
                onmouseout="this.style.backgroundColor='#f5f5f5'"
                onclick="selectSpecialRoom('${room}')">${room}</button>
            </div>`;
    });

    optionsHtml += `
            </div>
        </div>
        <div style="text-align: center; padding-top: 10px;">
            <button style="padding: 8px 20px; cursor: pointer; background-color: #f44336; color: white; 
            border: none; border-radius: 4px;" onclick="closeModal()">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
        </div>`;

    // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î modal ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
    const modal = document.getElementById("myModal");
    const modalContent = modal.querySelector(".modal-content");
    
    if (modalContent) {
        modalContent.style.maxWidth = "700px";
        modalContent.style.padding = "20px";
        modalContent.style.borderRadius = "12px";
    }

    showModal(optionsHtml);
fodal(optionsHtml);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô searchRoom
function searchRoom(roomNumber) {
    let resultElement = document.getElementById('result');
    let submitBtn = document.getElementById('submitBtn');
    let loadingGif = document.getElementById('loadingGif');
    let container = document.querySelector('.container');

    isSearching = true; // ‡∏ï‡∏±‡πâ‡∏á flag

    resultElement.innerText = "Searching...";
    resultElement.style.color = "blue";
    loadingGif.style.display = "block";
    container.classList.add("shrink");

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° padding animation ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î OK
    if (userConfirmedOnce) {
        container.classList.remove("padding-anim");
        void container.offsetWidth; // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        container.classList.add("padding-anim"); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
        container.classList.remove("expand", "shrink");
        void container.offsetWidth; // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    }
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° padding animation ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î OK
if (userConfirmedOnce) {
    // ‡∏•‡∏ö class ‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
    container.classList.remove("padding-anim", "expand", "shrink");

    // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• (trigger reflow)
    void container.offsetWidth;

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
    container.classList.add("padding-anim");
}

    submitBtn.disabled = true;
    submitBtn.innerText = "Searching...";

    fetch("https://script.google.com/macros/s/AKfycbwd9ZXZZ9smyywYK5FBCJPT9TWAQkCqoZ4PSUOBqLbmdZOsa_lK6yeb5th0ytEWf6DQ/exec?room=" + encodeURIComponent(roomNumber))
        .then(response => response.json())
        .then(data => {
            isSearching = false; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï flag

            loadingGif.style.display = "none";
            submitBtn.disabled = false;
            submitBtn.innerText = "Submit";

            container.classList.remove("expand", "shrink");
            void container.offsetWidth;
            container.classList.add("shrink");

            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï userConfirmedOnce ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            userConfirmedOnce = false;

            if (data.room) {
                let deepCleanDate = convertToBangkokTime(data.deep_clean);
                let filterAirDate = convertToBangkokTime(data.filter_air);
                let nextTimeDate = convertToBangkokTime(data.next_deepclean);
                let nextFilterAirDate = convertToBangkokTime(data.next_filter_air);
                
                resultElement.innerHTML = `
                ${iconRoom} <strong>Room:</strong> ${roomNumber} <br>
                ${iconNextClean} <strong>Next Deep Clean:</strong> ${nextTimeDate} <br>
                ${iconSoap} <strong>Latest Deep Clean:</strong> ${deepCleanDate} <br>
                ${iconNextClean} <strong>Next Air Filter Clean:</strong> ${nextFilterAirDate} <br>
                ${iconAir} <strong>Latest Air Filter Clean:</strong> ${filterAirDate} <br>
                <p style="margin-top: 10px;">
                    <small>
                        <em>üêæ Come meet TaoTao, the super cute cat that everyone falls in love with at first sight. 
                       <a href="https://www.instagram.com/p/DKoBYixSmEb/" style="color: blue; text-decoration: underline; font-weight: bold;"> click</a>
                    TaoTao and you'll see why everyone's so smitten!</em>
                    </small>
                </p>
            `;
                
                resultElement.style.color = "green";
                showModal(resultElement.innerHTML);
            } else if (data.error) {
                resultElement.innerText = data.error;
                resultElement.style.color = "red";
                showModal("‚ùå " + data.error);
            }
        })
        .catch(() => {
            isSearching = false; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï flag

            resultElement.innerText = "‚ùå An error occurred.";
            resultElement.style.color = "red";
            showModal("‚ùå Please try again.");
            loadingGif.style.display = "none";
            submitBtn.disabled = false;
            submitBtn.innerText = "Submit";

            container.classList.remove("expand", "shrink");
            void container.offsetWidth;
            container.classList.add("shrink");
        });
}

function submitRoom() {
    if (isSearching) return; // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥

    let roomInput = document.getElementById('roomNumber');

    // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ input ‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡πÇ‡∏ü‡∏Å‡∏±‡∏™ (‡∏õ‡∏¥‡∏î keyboard ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠)
    roomInput.blur();

    let roomNumber = roomInput.value.trim().toUpperCase();
    let pattern = /^[ABC]\d{3}$/;
    let resultElement = document.getElementById('result');
    let submitBtn = document.getElementById('submitBtn');
    let loadingGif = document.getElementById('loadingGif');
    let container = document.querySelector('.container');

    // ... ‡∏™‡πà‡∏ß‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°



    // container.classList.add("shrink");
    void container.offsetWidth;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô ## ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö pattern
    if (roomNumber === "##") {
        showSpecialRoomOptions();
        return;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å Special Rooms ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
    if (isSpecialRoom) {
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï flag ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å Special Rooms
        isSpecialRoom = false;
        searchRoom(roomNumber);  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô searchRoom ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
        return;
    }
    
    if (pattern.test(roomNumber)) {
        isSearching = true; // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á flag

        resultElement.innerText = "Searching...";
        resultElement.style.color = "blue";
        loadingGif.style.display = "block";
        container.classList.add("shrink");

        // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° padding animation ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏Å‡∏î OK
        if (userConfirmedOnce) {
            container.classList.remove("padding-anim");
            void container.offsetWidth; // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
            container.classList.add("padding-anim"); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
        }

        submitBtn.disabled = true;
        submitBtn.innerText = "Searching...";  // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô fetch

        fetch("https://script.google.com/macros/s/AKfycbwd9ZXZZ9smyywYK5FBCJPT9TWAQkCqoZ4PSUOBqLbmdZOsa_lK6yeb5th0ytEWf6DQ/exec?room=" + encodeURIComponent(roomNumber))
            .then(response => response.json())
            .then(data => {
                isSearching = false; // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï flag

                loadingGif.style.display = "none";
                submitBtn.disabled = false;
                submitBtn.innerText = "Submit";  // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å fetch ‡πÄ‡∏™‡∏£‡πá‡∏à

                container.classList.remove("expand", "shrink");
                void container.offsetWidth;
                container.classList.add("shrink");

                // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï userConfirmedOnce ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                userConfirmedOnce = false;

                if (data.room) {
                    let deepCleanDate = convertToBangkokTime(data.deep_clean);
                    let filterAirDate = convertToBangkokTime(data.filter_air);
                    let nextTimeDate = convertToBangkokTime(data.next_deepclean);
                    let nextFilterAirDate = convertToBangkokTime(data.next_filter_air);

                    
                   resultElement.innerHTML = `
                    ${iconRoom} <strong class="result-label">Room:</strong> <span class="result-green">${roomNumber}</span> <br>
                    ${iconNextClean} <strong class="result-label">Next Deep Clean:</strong> <span class="result-orange">${nextTimeDate}</span> <br>
                    ${iconSoap} <strong class="result-label">Latest Deep Clean:</strong> <span class="result-gray">${deepCleanDate}</span> <br>
                    ${iconNextClean} <strong class="result-label">Next Air Filter Clean:</strong> <span class="result-orange">${nextFilterAirDate}</span> <br>
                    ${iconAir} <strong class="result-label">Latest Air Filter Clean:</strong> <span class="result-gray">${filterAirDate}</span> <br>
                    `;


                


                    resultElement.style.color = "green";
                    showModal(resultElement.innerHTML);
                } else if (data.error) {
                    resultElement.innerText = data.error;
                    resultElement.style.color = "red";
                    showModal("‚ùå " + data.error);
                }
            })
            
            .catch(() => {
                isSearching = false; // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï flag

                resultElement.innerText = "‚ùå An error occurred.";
                resultElement.style.color = "red";
                showModal("‚ùå Please try again.");
                loadingGif.style.display = "none";
                submitBtn.disabled = false;
                submitBtn.innerText = "Submit";  // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å fetch ‡πÄ‡∏™‡∏£‡πá‡∏à

                container.classList.remove("expand", "shrink");
                void container.offsetWidth;
                container.classList.add("shrink");
            });
            
    } else {
        resultElement.innerText = "‚ùå Invalid format!";
        resultElement.style.color = "red";
        showModal("‚ùå Invalid room format!");
    }
}
